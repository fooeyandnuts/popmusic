<!DOCTYPE html>
<html>
  <head>
    <title>Show Courses</title>
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
      }
      #panel {
        position: absolute;
        top: 90px;
        left: 50%;
        margin-left: -160px;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
      }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
    <script>
    // In the following example, markers appear when the user clicks on the map.
    // The markers are stored in an array.
    // The user can then click an option to hide, show or delete the markers.
    var map;
    var markers = [];

    function initialize() {
      var myLatLng = new google.maps.LatLng(34.013112, -118.495122);
      var mapOptions = {
        zoom: 12,
        center: myLatLng,
        mapTypeId: google.maps.MapTypeId.TERRAIN,
      };

      map = new google.maps.Map(document.getElementById('map-canvas'),
          mapOptions);

      // This event listener will call addMarker() when the map is clicked.
      google.maps.event.addListener(map, 'click', function(event) {
        addMarker(event.latLng);
      });
    }

    // Add a marker to the map and push to the array.
    function addMarker(myLatLng) {
      var marker = new google.maps.Marker({
        position: myLatLng,
        map: map,
        draggable:true
      });

      google.maps.event.addListener(addMarker, 'click', function() {
            this['infowindow'].open(map, this);
        });

      markers.push(marker);
    }

    // Sets the map on all markers in the array.
    function setAllMap(map) {
      for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(map);
      }
    }

    // Removes the markers from the map, but keeps them in the array.
    function clearMarkers() {
      setAllMap(null);
    }

    // Shows any markers currently in the array.
    function showMarkers() {
      setAllMap(map);
    }

    // Deletes all markers in the array by removing references to them.
    function deleteMarkers() {
      clearMarkers();
      markers = [];
    }

    function saveMarkers() {
      for (var i = 0; i < markers.length; i++) {
         var courseMarker = {'marker':{latitude: markers[i].getPosition().lat(), longitude: markers[i].getPosition().lng(), course_id: <%= @course.id %>}};
          console.log(courseMarker);
       $.post("/markers", courseMarker, null, 'json');
      }
    }
    //Places existing markers on course show view
    var markerData;
    $.get("/courses/" + <%= @course.id %>, function(data) {
      markerData = data;
      console.log(markerData.courses[0].courses)
      for (var i = 0; i < markerData.courses.length; i++) {
        newMarker = new google.maps.Marker({
          position: new google.maps.LatLng(markerData.courses[i].courses.latitude, markerData.courses[i].courses.longitude), // sets the LatLng of each spot
          map: map
        });
      }
    }, "json");

    google.maps.event.addDomListener(window, 'load', initialize);
    </script>
  </head>
  <body>
    
    <div id="map-canvas"><p>Click on the map to add markers.</div>

    <div id="panel">
      <input onclick="deleteMarkers();" type=button value="Clear Markers">
      <input onclick="saveMarkers();" type=button value="Save Marker">
    </div>
  </body>
</html>